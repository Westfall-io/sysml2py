name: Release Workflow

on:
  push:
    branches:
      - main

permissions: write-all

jobs:
  documentation:
    name: Build Sphinx Documentation
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - id: deployment
      uses: sphinx-notes/pages@v3
      with:
        documentation_path: ./docs/source

  codecoverage:
    name: Determine code and documentation coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test ${{ github.event.push.head }} coverage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        python -m pip install coveralls pytest pyyaml textx
        python -m coverage run --source=src -m pytest tests/ && coverage report
        coveralls
    - name: Test ${{ github.event.push.head }} docstring coverage
      run: |
        pip install docstr-coverage
        docstr-coverage src/sysml2py --badge=doc-cov --fail-under=0 -e ".*/(textx|tests)"
    - name: Commit changes
      uses: EndBug/add-and-commit@v4
      with:
        author_name: ${{ github.actor }}
        author_email: ${{ github.actor }}@users.noreply.github.com
        message: ":robot: Add coverage badge"
        add: "doc-cov.svg"
        branch: ${{ github.ref }}

  versioning:
    name: Semantic Versioning
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Python Semantic Release
      uses: relekang/python-semantic-release@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        repository_username: __token__
        repository_password: ${{ secrets.PYPI_API_TOKEN }}

  release:
    name: PyPI Release
    needs: [documentation, codecoverage, versioning]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Build a binary wheel and a source tarball
      run: |
        pip install build
        python3 -m build --sdist --wheel --outdir dist/ .
    - name: Publish distribution ðŸ“¦ to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
