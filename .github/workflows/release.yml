name: Release Workflow

on:
  push:
    branches:
      - main

permissions: write-all

jobs:
  documentation:
    name: Build Sphinx Documentation
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - id: deployment
      uses: sphinx-notes/pages@v3
      with:
        documentation_path: ./docs/source

  codecoverage:
    name: Determine code and documentation coverage
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Test ${{ github.event.push.head }} coverage
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        python -m pip install coveralls pytest pyyaml textx
        python -m coverage run --source=src -m pytest tests/ && coverage report
        coveralls

  versioning:
    name: Semantic Versioning
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/sysml2py
    permissions:
      id-token: write
    needs: [documentation, codecoverage]
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Python Semantic Release ðŸ“¦ to PyPI
      id: release
      uses: python-semantic-release/python-semantic-release@v8.0.3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        repository_username: __token__
        repository_password: ${{ secrets.PYPI_API_TOKEN }}
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      if: ${{ steps.release.outputs.released }} == 'true'
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
    - name: Publish package to GitHub Release
      uses: python-semantic-release/upload-to-gh-release@main
      if: ${{ steps.release.outputs.released }} == 'true'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ steps.release.outputs.tag }}
